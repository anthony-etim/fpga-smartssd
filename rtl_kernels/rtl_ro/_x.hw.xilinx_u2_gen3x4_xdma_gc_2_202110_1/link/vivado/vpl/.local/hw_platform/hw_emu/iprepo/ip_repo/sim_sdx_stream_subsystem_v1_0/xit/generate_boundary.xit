# d52cbaca0ef8cf4fd3d6354deb5066970fb6511d02d18d15835e6014ed847fb0
# (c) Copyright 2018 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
############################################################
dbg_puts "----------------------------------------------------------------------"
dbg_puts "BEGIN: GENERATE_BOUNDARY"
# ----------------------------------------------------------------------
# Clocks:
#
# $num_clks specifies the number of ports to be created
# clock ports are named aclk, aclk1, ... 
#
create_bd_port -type clk -dir I -name aclk

for {set i 1} {$i < [dict get $CONFIG NUM_CLKS]} {incr i} {
  set name aclk$i
  set clk [create_bd_port -type clk -dir I -name $name]
}

# ----------------------------------------------------------------------
# Reset input:
create_bd_port -type rst -dir I -name aresetn 

# ----------------------------------------------------------------------
# Generate TM AXIS interfaces
set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Master M_STM_C2H_A_AXIS]
set intf_tlm [create_bd_intf_tlm_port -vlnv xilinx.com:interface:axis_tlm:1.0 -default_portmap -mode Master M_STM_C2H_A_AXIS]
set_property -dict [list CONFIG.HAS_TLAST {1} CONFIG.TID_WIDTH {8} CONFIG.TUSER_WIDTH {1} CONFIG.TDATA_NUM_BYTES {64}] $intf
set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Slave  S_STM_H2C_A_AXIS]
set intf_tlm [create_bd_intf_tlm_port -vlnv xilinx.com:interface:axis_tlm:1.0 -default_portmap -mode Slave  S_STM_H2C_A_AXIS]
set_property -dict [list CONFIG.HAS_TLAST {1} CONFIG.TDEST_WIDTH {16} CONFIG.TUSER_WIDTH {1} CONFIG.TDATA_NUM_BYTES {64}] $intf

if {[dict get $CONFIG HAS_CREDIT_CHANNEL]} { 
  set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Master M_STM_H2C_B_AXIS]
  set_property -dict [list CONFIG.HAS_TLAST {1} CONFIG.TID_WIDTH {8} CONFIG.TDATA_NUM_BYTES {4}] $intf
  set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Slave  S_STM_C2H_B_AXIS]
  set_property -dict [list CONFIG.HAS_TLAST {1} CONFIG.TDEST_WIDTH {16} CONFIG.TDATA_NUM_BYTES {4}] $intf
}


# Generate kernel facing intefaces
for {set i 0} {$i < [dict get $CONFIG NUM_SI]} {incr i} {
  set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Slave [format S%.2d_AXIS $i]]
  set intf_tlm [create_bd_intf_tlm_port -vlnv xilinx.com:interface:axis_tlm:1.0 -default_portmap -mode Slave [format S%.2d_AXIS $i]]
}

for {set i 0} {$i < [dict get $CONFIG NUM_MI]} {incr i} {
  set intf [create_bd_intf_port -vlnv xilinx.com:interface:axis_rtl:1.0 -default_portmap -mode Master [format M%.2d_AXIS $i]]
  set intf_tlm [create_bd_intf_tlm_port -vlnv xilinx.com:interface:axis_tlm:1.0 -default_portmap -mode Master [format M%.2d_AXIS $i]]
}

# ----------------------------------------------------------------------
# Default clock association:
set busif_names {}
foreach i [get_bd_intf_ports ] {
  dbg_puts "default clock association for $i"
  lappend busif_names [get_property NAME $i]
}

set_property CONFIG.ASSOCIATED_BUSIF [join $busif_names :] [get_bd_ports /aclk]

dbg_puts "END: GENERATE_BOUNDARY"
dbg_puts "----------------------------------------------------------------------"

