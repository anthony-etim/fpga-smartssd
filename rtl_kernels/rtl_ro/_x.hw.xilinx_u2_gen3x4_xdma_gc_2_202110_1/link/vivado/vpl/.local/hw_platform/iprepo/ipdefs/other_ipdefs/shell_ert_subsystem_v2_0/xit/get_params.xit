############################################################################################################################################
#
# (c) Copyright 2019 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
############################################################
#
############################################################################################################################################

set shell_subsystem                               [::ipxit::current_inst]

#==========================================================================================================================================#
# Get Project settings
#==========================================================================================================================================#

# N/A

#==========================================================================================================================================#
# Get user parameters
#==========================================================================================================================================#

# Subsystem Version Properties
set C_SUBSYSTEM_ID                                  [get_property CONFIG.VERSION.SUBSYSTEM_ID                   $shell_subsystem]
set C_VIV_VERSION                                   [get_property CONFIG.VERSION.VIV_VERSION                    $shell_subsystem]
set C_MAJOR_VERSION                                 [get_property CONFIG.VERSION.MAJOR_VERSION                  $shell_subsystem]
set C_MINOR_VERSION                                 [get_property CONFIG.VERSION.MINOR_VERSION                  $shell_subsystem]
set C_CORE_REVISION                                 [get_property CONFIG.VERSION.CORE_REVISION                  $shell_subsystem]
set C_PATCH_REVISION                                [get_property CONFIG.VERSION.PATCH_REVISION                 $shell_subsystem]
set C_PERFORCE_CL                                   [get_property CONFIG.VERSION.PERFORCE_CL                    $shell_subsystem]
set C_RESERVED_TAG                                  [get_property CONFIG.VERSION.RESERVED_TAG                   $shell_subsystem]

#------------------------------------------------------------------------------------------------------------------------------------------#
# OFFSET and RANGE
#------------------------------------------------------------------------------------------------------------------------------------------#

set C_RANGE_CQ_BRAM_CTRL_SEG                        [get_property CONFIG.RANGE_CQ_BRAM_CTRL_SEG                 $shell_subsystem]
set C_RANGE_AXI_BRAM_CTRL_LMB_SEG                   [get_property CONFIG.RANGE_AXI_BRAM_CTRL_LMB_SEG            $shell_subsystem]
set C_MB_BASE_VECTORS                               [get_property CONFIG.MB_BASE_VECTORS                        $shell_subsystem]
set C_REMOVE_KDMA                                   [get_property CONFIG.REMOVE_KDMA                            $shell_subsystem]
set C_PCIE_LINK_CAP_MAX                             [get_property CONFIG.PCIE_LINK_CAP_MAX                      $shell_subsystem]
set C_ERT_MGMT_PF_BASE_ADDR                         [get_property CONFIG.ERT_MGMT_PF_BASE_ADDR                  $shell_subsystem]
set C_ERT_USER_PF_BASE_ADDR                         [get_property CONFIG.ERT_USER_PF_BASE_ADDR                  $shell_subsystem]

# Set the KDMA DATA BUS WIDTH based on configured LINK WIDTH
if {$C_PCIE_LINK_CAP_MAX eq "Gen3x4"} {

    set C_M_AXI_GMEM_DATA_WIDTH 128

} elseif {$C_PCIE_LINK_CAP_MAX eq "Gen3x8"} {

    set C_M_AXI_GMEM_DATA_WIDTH 256

} else {

    set C_M_AXI_GMEM_DATA_WIDTH 512

}

# Set the CQRAM Depth based on C_RANGE_CQ_BRAM_CTRL_SEG
if {$C_RANGE_CQ_BRAM_CTRL_SEG eq "4k"} {

    set C_CQRAM_WRITE_DEPTH 4096

} elseif {$C_RANGE_CQ_BRAM_CTRL_SEG eq "8k"} {
  
    set C_CQRAM_WRITE_DEPTH 8192
    
} elseif {$C_RANGE_CQ_BRAM_CTRL_SEG eq "16k"} {
  
    set C_CQRAM_WRITE_DEPTH 16384
    
} elseif {$C_RANGE_CQ_BRAM_CTRL_SEG eq "32k"} {
  
    set C_CQRAM_WRITE_DEPTH 32768
    
} elseif {$C_RANGE_CQ_BRAM_CTRL_SEG eq "64k"} {
  
    set C_CQRAM_WRITE_DEPTH 65536

} elseif {$C_RANGE_CQ_BRAM_CTRL_SEG eq "128k"} {
  
    set C_CQRAM_WRITE_DEPTH 131072
               
} else {

    set C_CQRAM_WRITE_DEPTH 262144

}


