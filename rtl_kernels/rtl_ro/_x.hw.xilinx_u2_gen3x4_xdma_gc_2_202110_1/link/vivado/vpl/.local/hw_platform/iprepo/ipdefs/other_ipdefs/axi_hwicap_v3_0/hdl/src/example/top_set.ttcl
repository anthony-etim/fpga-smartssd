<: ;#Component and file information :>
<: set ComponentName [getComponentNameString] :>
<: setOutputDirectory [ttcl_string_concat $ComponentName "/example_design"] :>
<: setFileName "top_set" :>
<: setFileExtension ".tcl" :>
<: set lite_mode [getStringValue "C_MODE"] :>
<: set data_width [getStringValue "C_ICAP_WIDTH_S"] :>
<: set wd [ file dirname [ get_property xml_file_name [ current_ipbom ] ] ] :>
<: set icap_ext [getIntValue "C_ICAP_EXTERNAL"] :>
<: set data_width [getStringValue "C_ICAP_WIDTH_S"] :>
<: set startup [getIntValue "C_INCLUDE_STARTUP"] :>
<: set fifo_depth [getIntValue "C_WRITE_FIFO_DEPTH"] :>
<: set family [getStringValue "C_FAMILY"] :>
<: if {$lite_mode} { :>
<: set depth 64 :>
<: } else { :>
<: if {$data_width == "X32"} { :>
<: set depth 64 :>
<: } elseif {$data_width == "X16"} { :>
<: set depth 128 :>
<: } else { :> 
<: set depth 256 :>
<: } :>
<: } :>
#set a [pwd]
<: if {[string first "everest" $family] == -1} { :>
create_ip -name clk_wiz  -vendor xilinx.com -library ip -module_name clk_wiz_0
set_property -dict [list CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} CONFIG.PRIM_IN_FREQ {200.000} CONFIG.CLKOUT2_USED {true} CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {60.000} CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {100.000}] [get_ips clk_wiz_0]
generate_target all [get_ips clk_wiz_0]
<: } else { :>
create_ip -name clk_wizard -vendor xilinx.com -library ip -module_name clk_wiz_0
set_property -dict [list CONFIG.USE_RESET {true} CONFIG.USE_LOCKED {true} CONFIG.PRIM_IN_FREQ {200.000} CONFIG.PRIM_SOURCE {Differential_clock_capable_pin} CONFIG.CLKOUT_USED {true,true,false,false,false,false,false} CONFIG.CLKOUT_PORT {clk_out1,clk_out2,clk_out3,clk_out4,clk_out5,clk_out6,clk_out7} CONFIG.CLKOUT_REQUESTED_OUT_FREQUENCY {60.000,100.000,60.000,100.000,100.000,100.000,100.000}] [get_ips clk_wiz_0]
generate_target all [get_ips clk_wiz_0]
<: } :>
update_compile_order -fileset sources_1
create_ip -name axi_traffic_gen -vendor xilinx.com -library ip -module_name axi_traffic_gen_0
set coe1 [lindex [get_property name [get_files *atg_addr.coe]] 0 ]
set coe2 [lindex [get_property name [get_files *atg_mask.coe]] 0 ]
set coe3 [lindex [get_property name [get_files *atg_ctrl.coe]] 0 ]
set coe4 [lindex [get_property name [get_files *atg_data.coe]] 0 ]

<: if {$icap_ext == 1 && $data_width == "X32" && $fifo_depth == 64 && $startup == 0} { :>
set_property -dict [list CONFIG.C_ATG_MODE {AXI4-Lite} CONFIG.C_ATG_SYSINIT_MODES {System_Test} CONFIG.C_ATG_MIF_DATA_DEPTH {<=:$depth:>} CONFIG.C_ATG_SYSTEM_TEST_MAX_CLKS {2147483647} CONFIG.C_ATG_SYSTEM_CMD_MAX_RETRY {2147483647} CONFIG.C_ATG_SYSTEM_INIT_ADDR_MIF $coe1 CONFIG.C_ATG_SYSTEM_INIT_MASK_MIF $coe2 CONFIG.C_ATG_SYSTEM_INIT_CTRL_MIF $coe3 CONFIG.C_ATG_SYSTEM_INIT_DATA_MIF $coe4 CONFIG.C_ATG_SYSTEM_MAX_CHANNELS {2} CONFIG.C_ATG_SYSTEM_CH1_HIGH {0x00000FFF} CONFIG.C_ATG_SYSTEM_CH2_LOW {0x00001000} CONFIG.C_ATG_SYSTEM_CH2_HIGH {0x00001FFF}] [get_ips axi_traffic_gen_0]
<: } else { :>
set_property -dict [list CONFIG.C_ATG_MODE {AXI4-Lite} CONFIG.C_ATG_SYSINIT_MODES {System_Test} CONFIG.C_ATG_MIF_DATA_DEPTH {<=:$depth:>} CONFIG.C_ATG_SYSTEM_TEST_MAX_CLKS {2147483647} CONFIG.C_ATG_SYSTEM_CMD_MAX_RETRY {2147483647} CONFIG.C_ATG_SYSTEM_INIT_ADDR_MIF $coe1 CONFIG.C_ATG_SYSTEM_INIT_MASK_MIF $coe2 CONFIG.C_ATG_SYSTEM_INIT_CTRL_MIF $coe3 CONFIG.C_ATG_SYSTEM_INIT_DATA_MIF $coe4] [get_ips axi_traffic_gen_0]
<: } :>

#generate_target {instantiation_template} [get_ips axi_traffic_gen_0]
generate_target all [get_ips axi_traffic_gen_0]
#create_fileset -blockset axi_traffic_gen_0
#set_property top axi_traffic_gen_0 [get_fileset axi_traffic_gen_0]
#move_files -fileset [get_fileset axi_traffic_gen_0] [get_files -of_objects [get_fileset sources_1] $a/<=:$ComponentName:>_example.srcs/sources_1/ip/axi_traffic_gen_0/axi_traffic_gen_0.xci]
set_property top <=:$ComponentName:>_exdes [current_fileset]
update_compile_order -fileset sources_1
set_property top <=:$ComponentName:>_exdes_tb [get_filesets sim_1]
set_property top_lib {} [get_filesets sim_1]
set_property top_file {} [get_filesets sim_1]
update_compile_order -fileset sim_1



