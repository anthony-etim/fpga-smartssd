############################################################################################################################################
#
# (c) Copyright 2019 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
############################################################
#
############################################################################################################################################

#==========================================================================================================================================#
# (1) Create interface ports
#==========================================================================================================================================#

set s_axi_ctrl_mgmt [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl_mgmt ]
set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
] $s_axi_ctrl_mgmt

set s_axi_ctrl_mgmt_fanout_in [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl_mgmt_fanout_in ]
set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
] $s_axi_ctrl_mgmt_fanout_in

set s_axi_ctrl_user_fanout_in [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_ctrl_user_fanout_in ]
set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
] $s_axi_ctrl_user_fanout_in

set s_axi_data [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_data ]
set_property -dict [ list \
    CONFIG.PROTOCOL                         {AXI4}                                                                                          \
    CONFIG.ADDR_WIDTH                       {64}                                                                                            \
    CONFIG.DATA_WIDTH                       $pcie_link_width                                                                                \
    CONFIG.MAX_BURST_LENGTH                 {256}                                                                                           \
    CONFIG.SUPPORTS_NARROW_BURST            {0}                                                                                             \
    CONFIG.NUM_READ_OUTSTANDING             {16}                                                                                            \
    CONFIG.NUM_WRITE_OUTSTANDING            {16}                                                                                            \
    CONFIG.NUM_READ_THREADS                 {2}                                                                                             \
    CONFIG.NUM_WRITE_THREADS                {2}                                                                                             \
    CONFIG.INSERT_VIP                       {0}                                                                                             \
] $s_axi_data

#----------------------#
# C_ENABLE_M2M         #
#----------------------#

if {$C_ENABLE_M2M == true} {

    set s_axi_data_m2m [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_data_m2m ]
    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4}                                                                                          \
        CONFIG.ADDR_WIDTH                   {64}                                                                                            \
        CONFIG.DATA_WIDTH                   $pcie_link_width                                                                                \
        CONFIG.MAX_BURST_LENGTH             {256}                                                                                           \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.NUM_READ_OUTSTANDING         {16}                                                                                            \
        CONFIG.NUM_WRITE_OUTSTANDING        {16}                                                                                            \
        CONFIG.NUM_READ_THREADS             {2}                                                                                             \
        CONFIG.NUM_WRITE_THREADS            {2}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
   ] $s_axi_data_m2m

}

#----------------------#
# C_ENABLE_P2P         #
#----------------------#

if {$C_ENABLE_P2P == true} {

    set s_axi_data_p2p [ create_bd_intf_port -mode slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_data_p2p ]
    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4}                                                                                          \
        CONFIG.ADDR_WIDTH                   {64}                                                                                            \
        CONFIG.DATA_WIDTH                   $pcie_link_width                                                                                \
        CONFIG.MAX_BURST_LENGTH             {256}                                                                                           \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.NUM_READ_OUTSTANDING         {16}                                                                                            \
        CONFIG.NUM_WRITE_OUTSTANDING        {16}                                                                                            \
        CONFIG.NUM_READ_THREADS             {2}                                                                                             \
        CONFIG.NUM_WRITE_THREADS            {2}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
    ] $s_axi_data_p2p

}

#------------------------------------------------------------------------------------------------------------------------------------------#

set m_axi_ctrl_user_debug [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_ctrl_user_debug ]
set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
] $m_axi_ctrl_user_debug

#-----------#
# C_NUM_SLR #
#-----------#

set num_slr_index 0

while {$num_slr_index < $C_NUM_SLR} {

    set instance_name m_axi_ctrl_user_${num_slr_index}

    set $instance_name [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_ctrl_user_${num_slr_index} ]
    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
    ] [subst $$instance_name]

    incr num_slr_index

}

set num_slr_index 0

while {$num_slr_index < $C_NUM_SLR} {

    set instance_name m_axi_ctrl_mgmt_${num_slr_index}

    set $instance_name [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_ctrl_mgmt_${num_slr_index} ]

    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4LITE}                                                                                      \
        CONFIG.ADDR_WIDTH                   {32}                                                                                            \
        CONFIG.DATA_WIDTH                   {32}                                                                                            \
        CONFIG.MAX_BURST_LENGTH             {1}                                                                                             \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
    ] [subst $$instance_name]

    incr num_slr_index

}

set m_axi_data [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_data ]
set_property -dict [ list \
    CONFIG.PROTOCOL                         {AXI4}                                                                                          \
    CONFIG.ADDR_WIDTH                       {64}                                                                                            \
    CONFIG.DATA_WIDTH                       $pcie_link_width                                                                                \
    CONFIG.MAX_BURST_LENGTH                 {256}                                                                                           \
    CONFIG.SUPPORTS_NARROW_BURST            {0}                                                                                             \
    CONFIG.NUM_READ_OUTSTANDING             {16}                                                                                            \
    CONFIG.NUM_WRITE_OUTSTANDING            {16}                                                                                            \
    CONFIG.NUM_READ_THREADS                 {2}                                                                                             \
    CONFIG.NUM_WRITE_THREADS                {2}                                                                                             \
    CONFIG.INSERT_VIP                       {0}                                                                                             \
] $m_axi_data

#----------------------#
# C_ENABLE_M2M         #
#----------------------#

if {$C_ENABLE_M2M == true} {

    set m_axi_data_m2m [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_data_m2m ]
    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4}                                                                                          \
        CONFIG.ADDR_WIDTH                   {64}                                                                                            \
        CONFIG.DATA_WIDTH                   $pcie_link_width                                                                                \
        CONFIG.MAX_BURST_LENGTH             {256}                                                                                           \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.NUM_READ_OUTSTANDING         {16}                                                                                            \
        CONFIG.NUM_WRITE_OUTSTANDING        {16}                                                                                            \
        CONFIG.NUM_READ_THREADS             {2}                                                                                             \
        CONFIG.NUM_WRITE_THREADS            {2}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
    ] $m_axi_data_m2m

}

#----------------------#
# C_ENABLE_P2P         #
#----------------------#

if {$C_ENABLE_P2P == true} {

    set m_axi_data_p2p [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_data_p2p ]
    set_property -dict [ list \
        CONFIG.PROTOCOL                     {AXI4}                                                                                          \
        CONFIG.ADDR_WIDTH                   {64}                                                                                            \
        CONFIG.DATA_WIDTH                   $pcie_link_width                                                                                \
        CONFIG.MAX_BURST_LENGTH             {256}                                                                                           \
        CONFIG.SUPPORTS_NARROW_BURST        {0}                                                                                             \
        CONFIG.NUM_READ_OUTSTANDING         {16}                                                                                            \
        CONFIG.NUM_WRITE_OUTSTANDING        {16}                                                                                            \
        CONFIG.NUM_READ_THREADS             {2}                                                                                             \
        CONFIG.NUM_WRITE_THREADS            {2}                                                                                             \
        CONFIG.INSERT_VIP                   {0}                                                                                             \
    ] $m_axi_data_p2p

}

#------------------------------------------------------------------------------------------------------------------------------------------#

#-----------------------#
# C_NUM_ISOLATED_STREAM #
#-----------------------#

if {$C_NUM_ISOLATED_STREAM > 0} {

    # Generate Slave interfaces

    set s_axis_h2c          [ create_bd_intf_port -mode Slave   -vlnv xilinx.com:display_qdma:m_axis_h2c_rtl:1.0        s_axis_h2c ]
    set s_qdma_tm_dsc_sts   [ create_bd_intf_port -mode Slave   -vlnv xilinx.com:display_qdma:tm_dsc_sts_rtl:1.0        s_qdma_tm_dsc_sts ]
    set s_qdma_h2c_byp_out  [ create_bd_intf_port -mode Slave   -vlnv xilinx.com:display_qdma:h2c_byp_out_rtl:1.0       s_qdma_h2c_byp_out ]
    set s_qdma_c2h_byp_out  [ create_bd_intf_port -mode Slave   -vlnv xilinx.com:display_qdma:h2c_byp_out_rtl:1.0       s_qdma_c2h_byp_out ]

    # Generate Master interfaces

    set m_axis_c2h          [ create_bd_intf_port -mode Master  -vlnv xilinx.com:display_qdma:s_axis_c2h_rtl:1.0        m_axis_c2h ]
    set m_axis_c2h_cmpt     [ create_bd_intf_port -mode Master  -vlnv xilinx.com:display_qdma:s_axis_c2h_cmpt_rtl:1.0   m_axis_c2h_cmpt ]
    set m_qdma_dsc_crdt_in  [ create_bd_intf_port -mode Master  -vlnv xilinx.com:display_qdma:dsc_crdt_in_rtl:1.0       m_qdma_dsc_crdt_in ]
    set m_qdma_h2c_byp_in   [ create_bd_intf_port -mode Master  -vlnv xilinx.com:display_qdma:h2c_byp_in_st_rtl:1.0     m_qdma_h2c_byp_in ]

    # Generate fan-out Master/Slave interfaces

    set isolated_stream_index 0

    while {$isolated_stream_index < $C_NUM_ISOLATED_STREAM} {

        set instance_name s_axis_h2c_b_${isolated_stream_index}
        set $instance_name [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 $instance_name ]
        set_property -dict [ list           \
            CONFIG.HAS_TKEEP {0}            \
            CONFIG.HAS_TLAST {1}            \
            CONFIG.HAS_TREADY {1}           \
            CONFIG.HAS_TSTRB {0}            \
            CONFIG.TDATA_NUM_BYTES {4}      \
            CONFIG.TDEST_WIDTH {0}          \
            CONFIG.TID_WIDTH {8}            \
            CONFIG.TUSER_WIDTH {1}          \
         ] [subst $$instance_name]

        set instance_name s_axis_c2h_a_${isolated_stream_index}
        set $instance_name [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 $instance_name ]
        set_property -dict [ list           \
            CONFIG.HAS_TKEEP {0}            \
            CONFIG.HAS_TLAST {1}            \
            CONFIG.HAS_TREADY {1}           \
            CONFIG.HAS_TSTRB {0}            \
            CONFIG.TDATA_NUM_BYTES {64}     \
            CONFIG.TDEST_WIDTH {0}          \
            CONFIG.TID_WIDTH {8}            \
            CONFIG.TUSER_WIDTH {1}          \
         ] [subst $$instance_name]

        set instance_name m_axis_h2c_a_${isolated_stream_index}
        set $instance_name [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 $instance_name ]
        set_property -dict [ list           \
            CONFIG.HAS_TKEEP {0}            \
            CONFIG.HAS_TLAST {1}            \
            CONFIG.HAS_TREADY {1}           \
            CONFIG.HAS_TSTRB {0}            \
            CONFIG.TDATA_NUM_BYTES {64}     \
            CONFIG.TDEST_WIDTH {0}          \
            CONFIG.TID_WIDTH {8}            \
            CONFIG.TUSER_WIDTH {1}          \
         ] [subst $$instance_name]

        set instance_name m_axis_c2h_b_${isolated_stream_index}
        set $instance_name [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 $instance_name ]
        set_property -dict [ list           \
            CONFIG.HAS_TKEEP {0}            \
            CONFIG.HAS_TLAST {1}            \
            CONFIG.HAS_TREADY {1}           \
            CONFIG.HAS_TSTRB {0}            \
            CONFIG.TDATA_NUM_BYTES {4}      \
            CONFIG.TDEST_WIDTH {0}          \
            CONFIG.TID_WIDTH {8}            \
            CONFIG.TUSER_WIDTH {1}          \
         ] [subst $$instance_name]

        incr isolated_stream_index

    }

}

#==========================================================================================================================================#
# (2) Create ports
#==========================================================================================================================================#

# Clocks ###################################################################################################################################

set aclk_pcie_associated_busif {s_axi_data}

if {$C_AXI_USER_PCIE_CLK == true} {

    set aclk_pcie_associated_busif ${aclk_pcie_associated_busif}:s_axi_ctrl_user_fanout_in

}

if {$C_ENABLE_M2M == true} {

    set aclk_pcie_associated_busif ${aclk_pcie_associated_busif}:s_axi_data_m2m

}

if {$C_ENABLE_P2P == true} {

    set aclk_pcie_associated_busif ${aclk_pcie_associated_busif}:s_axi_data_p2p

}

set aclk_pcie [ create_bd_port -dir I -type clk aclk_pcie ]
set_property -dict [ list                                     \
    CONFIG.ASSOCIATED_RESET {aresetn_pcie:aresetn_pcie_ulp}   \
    CONFIG.ASSOCIATED_BUSIF ${aclk_pcie_associated_busif}     \
    CONFIG.FREQ_HZ {250000000}                                \
] $aclk_pcie


set aclk_ctrl_associated_busif {s_axi_ctrl_mgmt:s_axi_ctrl_mgmt_fanout_in}

if {$C_AXI_USER_PCIE_CLK == false} {

    set aclk_ctrl_associated_busif ${aclk_ctrl_associated_busif}:s_axi_ctrl_user_fanout_in

}

set aclk_ctrl [ create_bd_port -dir I -type clk aclk_ctrl ]
set_property -dict [ list                                                                         \
    CONFIG.ASSOCIATED_RESET {aresetn_ctrl:aresetn_ctrl_ulp}                                       \
    CONFIG.ASSOCIATED_BUSIF ${aclk_ctrl_associated_busif}                                         \
    CONFIG.FREQ_HZ {50000000}                                                                     \
] $aclk_ctrl

#-----------#
# C_NUM_SLR #
#-----------#


# Resets ###################################################################################################################################

set aresetn_pcie [ create_bd_port -dir I -type rst aresetn_pcie ]
set aresetn_ctrl [ create_bd_port -dir I -type rst aresetn_ctrl ]

set aresetn_pcie_ulp [ create_bd_port -dir O -type rst aresetn_pcie_ulp ]
set aresetn_ctrl_ulp [ create_bd_port -dir O -type rst aresetn_ctrl_ulp ]


# Interrupts ###############################################################################################################################

set interrupt_firewall [ create_bd_port -dir O -type intr interrupt_firewall ]


# Other ####################################################################################################################################

#-----------------------#
# C_NUM_ISOLATED_STREAM #
#-----------------------#

if {$C_NUM_ISOLATED_STREAM > 0} {

    set qdma_stm_usr_irq_ack [ create_bd_port -dir I qdma_stm_usr_irq_ack ]
    set stm_qdma_usr_irq_req [ create_bd_port -dir O stm_qdma_usr_irq_req ]

}
